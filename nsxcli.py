#!/usr/bin/env python3
from xml.etree import ElementTree as ET
from datetime import datetime


def SubElement(parent, tag, text=None, attributes={}):
    e = ET.SubElement(parent, tag, attrib=attributes)
    e.text = text
    return e

def createNsxcliNs(parent):
    ns = SubElement(parent, tag="namespaces")
    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli"})
    SubElement(n, tag="description", text = "nsxcli commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.segment"})
    SubElement(n, tag="description", text = "nsxcli segment commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.gateway"})
    SubElement(n, tag="description", text = "nsxcli gateway commands")
    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.gateway.neighbor"})
    SubElement(n, tag="description", text = "nsxcli gateway neighbor commands")
    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.gateway.interface"})
    SubElement(n, tag="description", text = "nsxcli gateway interface commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.ids"})
    SubElement(n, tag="description", text = "nsxcli gateway commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.ids.engine"})
    SubElement(n, tag="description", text = "nsxcli gateway commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.ids.events"})
    SubElement(n, tag="description", text = "nsxcli gateway commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.firewall"})
    SubElement(n, tag="description", text = "nsxcli gateway commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.lldp"})
    SubElement(n, tag="description", text = "nsxcli lldp commands")

    n = SubElement(ns, tag="namespace", attributes = {"path":"nsxcli.intelligence"})
    SubElement(n, tag="description", text = "nsxcli intelligence commands")

    return ns

def createNsxcliCli(parent):
    cli = SubElement(parent, tag="commands")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.node"})
    SubElement(c, tag="description", text="Run nsxcli -c get node-uuid")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get node-uuid ")
    

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.managers"})
    SubElement(c, tag="description", text="Run nsxcli -c get managers")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get managers")
    
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.controllers"})
    SubElement(c, tag="description", text="Run nsxcli -c get controllers")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get controllers ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ports"})
    SubElement(c, tag="description", text="Run nsxcli -c get ports")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ports ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.lldp.config"})
    SubElement(c, tag="description", text="Run nsxcli -c get lldp config")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get lldp config ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.lldp.neighbors"})
    SubElement(c, tag="description", text="Run nsxcli -c get lldp neighbors")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get lldp neighbors ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.list"})
    SubElement(c, tag="description", text="Run nsxcli -c get getways, same as get logical-routers")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateways ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.uuid"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid>")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.forwarding"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid> forwarding [<prefix>]|ipv4|ipv6")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"prefix", "type":"string", "required":"false"})
    SubElement(inputparam, tag="description", text="Accepts a CIDR or ipv4, ipv6")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} forwarding $if{prefix, $val{prefix}} ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.igmp"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid> igmp membership  [<ip-address>]")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"address", "type":"string", "required":"false"})
    SubElement(inputparam, tag="description", text="IP Address")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} igmp membership $if{address, $val{address}} ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.neighbor.get"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid> neighbors")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} neighbor ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.neighbor.address"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid> neighbor [<ip-or-mac-address>]")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"address", "type":"string", "required":"false"})
    SubElement(inputparam, tag="description", text="IP or MAC address")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} neighbor $if{address, $val{address}}  ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.interface.list"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid> interfaces")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} interfaces  ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.gateway.interface.stats"})
    SubElement(c, tag="description", text="Run nsxcli -c get getway <uuid> interface <int-uuid> stats [ipv4|ipv6]")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the gateway")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"intuuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="UUID of the interface")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"family", "type":"string", "required":"false"})
    SubElement(inputparam, tag="description", text="Acceptable values are ipv4 or ipv6")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get gateway $val{uuid} interface $val{intuuid} stats $if{family, $val{family}}  ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.segment.list"})
    SubElement(c, tag="description", text="Run nsxcli -c get segments, same as get logical-switches")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get segments ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.segment.arp"})
    SubElement(c, tag="description", text="Run nsxcli -c get segment <segment-id> arp-table")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="Segment ID, this can be VNI or UUID")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get segment $val{id} arp-table ")
    
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.segment.nd"})
    SubElement(c, tag="description", text="Run nsxcli -c get segment <segment-id> nd-table")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="Segment ID, this can be VNI or UUID")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get segment $val{id} nd-table ")
    
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.segment.tep"})
    SubElement(c, tag="description", text="Run nsxcli -c get segment <segment-id> vtep-table")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="Segment ID, this can be VNI or UUID")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get segment $val{id} vtep-table ")
    
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.segment.tepgroup"})
    SubElement(c, tag="description", text="Run nsxcli -c get segment <segment-id> vtep-group")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="Segment ID, this can be VNI or UUID")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get segment $val{id} vtep-group ")

    
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.broker"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence broker stats")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence broker stats ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.config"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence flows config")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence flows config ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.mask"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence flows mask")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence flows mask ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.metrics"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence flows metrics")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence flows metrics ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.metricports"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence flows metrics ports")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence flows metrics ports ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.stats"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence flows stats")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence flows stats ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.intelligence.statsack"})
    SubElement(c, tag="description", text="Run nsxcli -c get intelligence flows stats ack")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get intelligence flows stats ack ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.vifs"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall vifs")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall vifs ")

    
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.addrsets"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall <vifuuid> addrsets")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="VIF UUID, from VIF listing")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall $val{uuid} addrsets ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.profile"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall <vifuuid> profile")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="VIF UUID, from VIF listing")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall $val{uuid} profile ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.rules"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall <vifuuid> ruleset rules")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"uuid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="VIF UUID, from VIF listing")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall $val{uuid} ruleset rules ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.exclusion"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall exclusion")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall exclusion ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.ipfixcontainers"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall ipfix-containers")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall ipfix-containers ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.ipfixfilters"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall ipfix-filters")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall ipfix-filters ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.ipfixprofiles"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall ipfix-profiles")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall ipfix-profiles ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.ipfixstats"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall ipfix-stats")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall ipfix-stats ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.packetlog"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall packetlog [last <lines>]")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"lines", "type":"string", "required":"false"})
    SubElement(inputparam, tag="description", text="Show only the tail number of <lines>")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall packetlog $if{lines, last $val{lines}}  ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.rulesStats"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall rule-stats")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall rule-stats ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.rulesStatstotal"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall rule-stats total")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall rule-stats total ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.status"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall status")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall status ")
        
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.thresholds"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall thresholds")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall thresholds ")
        
    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.firewall.thresholdAlarms"})
    SubElement(c, tag="description", text="Run nsxcli -c get firewall thresholds")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get firewall threshold-alarms ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.status"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids status")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids status ")


    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.rules"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids rules")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids rules ")


    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.profiles"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids profiles")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids profiles ")


    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.logging"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids logging-level")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids status ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.events.stats"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids events stats")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids events stats ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.status"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine status")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine status ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.stats"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine stats")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine stats ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.alertlog"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine alertlog")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine alertlog ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.logging"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine logging-level")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine logging-level ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.profiles"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine profiles")
    inputspec = SubElement(c, tag="input-spec")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine profiles ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.profilestats"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine profilestats <profileid>")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="IDS profile ID")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine profilestats $val{id}  ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.profilestatus"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine profilestatus <profileid>")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="IDS profile ID")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine profilestatus $val{id}  ")

    c = SubElement(cli, tag="command", attributes={"path":"nsxcli.ids.engine.signaction"})
    SubElement(c, tag="description", text="Run nsxcli -c get ids engine signaction <ruleid> <profileid> <signid>")
    inputspec = SubElement(c, tag="input-spec")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"ruleid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="IDS rule ID")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"id", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="IDS profile ID")
    inputparam = SubElement(inputspec, tag="parameter", attributes={"name":"signid", "type":"string", "required":"true"})
    SubElement(inputparam, tag="description", text="IDS signid")
    outputspec = SubElement(c, tag="output-spec")
    SubElement(outputspec, tag="string")
    formatparam = SubElement(c, tag="format-parameters")
    SubElement(formatparam, tag="formatter", text="simple")
    SubElement(c, tag="execute", text="/opt/esxcliext/bin/esxcli-nsxcli.sh get ids engine signation $val{ruleid}  $val{id} $val{signid} ")

    
    return cli
                            

def createNsxcliExt(filename):
    root=ET.Element("plugin", attrib={"xmlns":"http://www.vmware.com/Products/ESX/5.0/esxcil/"})
    SubElement(root, tag="version", text="1.0.0")
    createNsxcliNs(root)
    createNsxcliCli(root)
    tree = ET.ElementTree(root)
    ET.indent(tree, '    ')
    with open(filename, 'wb') as f:
        tree.write(f, xml_declaration=True)
    
                   
def main():    
    createNsxcliExt("nsx-nsxcli.xml")
    
if __name__ == '__main__':
    main()    
